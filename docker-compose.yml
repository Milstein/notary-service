version: '3.6'
services:

  database:
    image: postgres:11
    container_name: database
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      ns_net:
        ipv4_address: 172.16.238.10
    volumes:
      - ./pg_data/data:${PGDATA:-/var/lib/postgresql/data}
      - ./pg_data/logs:${POSTGRES_INITDB_WALDIR:-/var/log/postgresql}
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data}
      - POSTGRES_DB=postgres

  django:
    build:
      context: ./
      dockerfile: Dockerfile
    image: django
    container_name: django
    depends_on:
      - database
      - neo4j
      - kafka
    ports:
      - 8000:8000
    networks:
      ns_net:
        ipv4_address: 172.16.238.11
    extra_hosts:
      - "${NEO4J_HOST:-127.0.0.1}:172.16.238.13"
    volumes:
      - .:/code
      - ./static:/code/static
      - ./media:/code/media
    environment:
      - UWSGI_UID=${UWSGI_UID:-1000}
      - UWSGI_GID=${UWSGI_GID:-1000}

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 8080:80
      - 8443:443
    networks:
      ns_net:
        ipv4_address: 172.16.238.12
    volumes:
      - .:/code
      - ./static:/code/static
      - ./media:/code/media
      - ${NGINX_DEFAULT_CONF:-./nginx/default.conf}:/etc/nginx/conf.d/default.conf
      - ${NGINX_SSL_CERT:-./ssl/ssl_dev.crt}:/etc/ssl/SSL.crt  # SSL development certificate
      - ${NGINX_SSL_KEY:-./ssl/ssl_dev.key}:/etc/ssl/SSL.key   # SSL development key

  neo4j:
    image: rencinrig/neo4j-apoc:latest
    container_name: neo4j
    user: ${NEO4J_UID:-1000}:${NEO4J_GID:-1000}
    ports:
      - 7474:7474  # for HTTP
      - 7473:7473  # for HTTPS
      - 7687:7687  # for Bolt
    networks:
      ns_net:
        ipv4_address: 172.16.238.13
    volumes:
      - ${NEO4J_DATA_PATH_HOST:-$(pwd)/neo4j/data}:${NEO4J_DATA_PATH_DOCKER:-/data}
      - ${NEO4J_IMPORTS_PATH_HOST:-$(pwd)/neo4j/imports}:${NEO4J_IMPORTS_PATH_DOCKER:-/imports}
      - ${NEO4J_LOGS_PATH_HOST:-$(pwd)/neo4j/logs}:${NEO4J_LOGS_PATH_DOCKER:-/logs}
      - ${NGINX_SSL_CERT:-./ssl/ssl_dev.crt}:/ssl/neo4j.cert  # SSL development certificate
      - ${NGINX_SSL_KEY:-./ssl/ssl_dev.key}:/ssl/neo4j.key    # SSL development key
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASS:-password}

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      ns_net:
        ipv4_address: 172.16.238.14

  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      ns_net:
        ipv4_address: 172.16.238.15
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT:-zookeeper:2181}
      - KAFKA_LISTENERS=${KAFKA_LISTENERS:-PLAINTEXT://:9092}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://127.0.0.1:9092}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${KAFKA_DATA_PATH_HOST:-./kafka}:/kafka

networks:
  ns_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24